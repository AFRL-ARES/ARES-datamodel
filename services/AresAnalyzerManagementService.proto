syntax = "proto3";

package ares.messaging;

import "Analyzing/AnalyzerInfo.proto";
import "Analyzing/AnalyzerState.proto";
import "Analyzing/AnalyzerSettings.proto";
import "AresStruct.proto";

import "google/protobuf/empty.proto";
import "google/protobuf/wrappers.proto";

service AresAnalyzerManagementService {
	rpc GetAllAnalyzers(google.protobuf.Empty) returns (GetAllAnalyzersResponse);
	rpc AddRemoteAnalyzer(AddRemoteAnalyzerRequest) returns (AddRemoteAnalyzerResponse);
	rpc UpdateRemoteAnalyzer(UpdateRemoteAnalyzerRequest) returns (UpdateRemoteAnalyzerResponse);
	rpc RemoveRemoteAnalyzer(RemoveRemoteAnalyzerRequest) returns (google.protobuf.Empty);
	rpc GetState(AnalyzerStateRequest) returns (AnalyzerStateResponse);
	rpc GetInfo(AnalyzerInfoRequest) returns (AnalyzerInfoResponse);
	rpc SetAnalyzerSettings(analyzing.AnalyzerSettings) returns (google.protobuf.Empty);
	rpc GetAnalyzerSettings(AnalyzerSettingsRequest) returns (AresStruct);
}

message GetAllAnalyzersResponse {
	repeated analyzing.AnalyzerInfo analyzers = 1; // gets all currently registered analyzers
}

message AddRemoteAnalyzerRequest {
	string name = 1;
	string url = 2;
}

message AddRemoteAnalyzerResponse {
	google.protobuf.StringValue analyzer_id = 1;
	bool success = 2;
	google.protobuf.StringValue error_message = 3;
}

message UpdateRemoteAnalyzerRequest {
	// the id of the analyzer to be updated
	string analyzer_id = 1;
	// the following values ares the optional new values for the analyzer
	google.protobuf.StringValue name = 2;
	google.protobuf.StringValue url = 3;
}

message UpdateRemoteAnalyzerResponse {
	bool success = 1;
	google.protobuf.StringValue error_message = 2;
}

message RemoveRemoteAnalyzerRequest {
	google.protobuf.StringValue analyzer_id = 1;
	bool success = 2;
	google.protobuf.StringValue error_message = 3;
}

message AnalyzerStateRequest {
	string analyzer_id = 1;
}

message AnalyzerStateResponse {
	analyzing.AnalyzerState state = 1;
	string state_message = 2;
}

message AnalyzerInfoRequest {
	string analyzer_id = 1;
}

message AnalyzerInfoResponse {
	analyzing.AnalyzerInfo info = 1;
}

message AnalyzerSettingsRequest {
	string analyzer_id = 1;
}