syntax = "proto3";

package ares.datamodel.templates;

import "limits.proto";
import "google/protobuf/any.proto";
import "ares_data_schema.proto";
import "ares_struct.proto";

message ParameterMetadata {
	optional string unique_id = 1; // A unique id for this metadata
	string name = 2; // Name descriptor of the argument/parameter
	string unit = 3; // Unit descriptor, if applicable, of the argument/parameter
	repeated Limits constraints = 4; // Collection of limits for the argument/parameter formatted to be easily converted into planner requests.
	int64 index = 5; // Index of the collection in which executed this template
  optional string output_name = 6; // an optional associated experiment output that can be associated with this parameter
	bool not_plannable = 7; // Set based on whether or not the parameter is meant to be plannable by external planner
	bool use_default = 8; // Set based on whether or not the parameter should utilize its default value
	optional SchemaEntry schema = 9; // The schema describing the type of this parameter
	string planner_name = 10; // Name descriptor of the planner used to plan for this parameter 
	string planner_description = 11; // Descriptor of the planner used
	optional AresValue initial_value = 12; // Optional initial value, specifically intended for planner utilization
	google.protobuf.Any extra_info = 13; // It's a pain
	}